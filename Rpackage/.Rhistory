t1 <- proc.time()
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
print(fibonacci_c(39))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
library(Rcpp)
t1 <- proc.time()
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
print(fibonacci_c(39))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
getwd('Rcpp')
getwd(Rcpp)
#' Title
#'
#' @param n
#'
#' @return
#' @export
#'
#' @examples
fibonacci <- function(n) {
if (n==0)
return (0)
if (n==1)
return (1)
return (fibonacci(n-1) + fibonacci(n-2))
}
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
install.packages(c("devtools","roxygen2","testthat","knitr","usethis")
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
.libPaths()
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("jsonlite", type = "source")
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
installed.packages()[,c('Package','Version','LibPath')]
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
fibonacci_c(12)
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibondeacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
t1 <- proc.time()
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
print(fibonacci_c(39))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
t1 <- proc.time()
#' Title
#'
#' @param n
#'
#' @return
#' @export
#'
#' @examples
fibonacci <- function(n) {
if (n==0)
return (0)
if (n==1)
return (1)
return (fibonacci(n-1) + fibonacci(n-2))
}
print(fibonacci(39))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
t1 <- proc.time()
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
print(fibonacci_c(40))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
t1 <- proc.time()
library(Rcpp)
cppFunction(code = '
int fibonacci_c(const int x){
if(x < 2) return x;
if(x > 40) return -1;
//太大x占用过多资源
return (fibonacci_c(x-1) + fibonacci_c(x-2));
}
')
print(fibonacci_c(39))
t2 <- proc.time()
t <- t2 - t1
print(paste('执行时间: ',t[3][[1]],'秒'))
devtools::document()
install.packages(c("devtools","roxygen2","testthat","knitr","usethis")
=
install.packages(c("devtools","roxygen2","testthat","knitr","usethis")
=
install.packages(c("devtools","roxygen2","testthat","knitr","usethis")）
install.packages(c("devtools","roxygen2","testthat","knitr","usethis"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr", "usethis"))
devtools::document()
install.packages("roxygen2")
devtools::document()
.libPaths()
install.packages("roxygen2", dependencies=TRUE, repos='https://www.tidyverse.org/blog/2020/03/roxygen2-7-1-0/')
install.packages("roxygen2")
install.packages("knitr")
install.packages("roxygen2")
devtools::document()
devtools::use_testthat()
usethis::use_vignette("my_vignette")
library(Rpackage)
library(Rpackage)
fibonacci(12)
fibonacci_c(24)
library(Rpackage)
fibonacci_c(24)
usethis::use_testthat()
devtools::test()
devtools::check()
